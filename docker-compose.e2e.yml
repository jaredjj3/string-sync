version: '3.7'

services:
  db:
    image: postgres:11
    restart: always
    environment:
      POSTGRES_DB: stringsync
      POSTGRES_USER: stringsync
      POSTGRES_PASSWORD: stringsync

  server:
    image: ss-server:latest
    build:
      context: ./server
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3000
      WEB_URI: http://web:8080
      DB_NAME: stringsync
      DB_USERNAME: stringsync
      DB_PASSWORD: stringsync
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./common:/string-sync/common
      - ./server/src:/string-sync/server/src
    links:
      - db
    command: ['yarn', 'build:dev']

  scripts:
    image: ss-server:latest
    environment:
      NODE_ENV: test
      DB_NAME: stringsync
      DB_USERNAME: stringsync
      DB_PASSWORD: stringsync
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./common:/string-sync/common
      - ./server/src:/string-sync/server/src
    links:
      - db
    command: ['yarn', 'start:scripts:dev']

  web:
    image: ss-web:latest
    build:
      context: ./web
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: test
      REACT_APP_SERVER_URI: http://server:3000/graphql
    volumes:
      - ./common:/string-sync/common
      - ./web/src:/string-sync/web/src
      - ./web/public:/string-sync/web/public
    links:
      - server
    command: ['yarn', 'start']

  e2e:
    image: ss-e2e:latest
    shm_size: '1g'
    build:
      context: ./e2e
      dockerfile: ./Dockerfile
    volumes:
      - ./e2e/src:/string-sync/e2e/src
    environment:
      WEB_URI: http://web:8080
    links:
      - server
      - web
      - scripts
