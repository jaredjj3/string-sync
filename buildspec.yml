version: 0.2

phases:
  install:
    commands:
      - echo Configuring yarn...
      - yarn config set cache-folder /root/.yarn
      - yarn config set install.prefer-offline true
      - echo Installing script node_modules...
      - (cd ./bin/scripts && yarn install)

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest || true
      - echo Logging into docker...
      - aws s3 cp s3://$S3_SECRETS_BUCKET/.docker.key .docker.key
      - docker login -u stringsync --password-stdin < .docker.key
      - rm .docker.key

  build:
    commands:
      - echo Building images...
      - ./bin/ss build --dev --prod --cacheFrom $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      # - echo Testing images...
      # - ./bin/ss test api
      # - ./bin/ss test web

  post_build:
    commands:
      - |
        if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 1 ]
        then
          echo Pushing server images...
          docker tag stringsync $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

          echo Writing imagedefinitions.json...
          IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest"
          printf '[{"name":"api","imageUri":"'$IMAGE_URI'"}]' > imagedefinitions.api.json
          printf '[{"name":"worker","imageUri":"'$IMAGE_URI'"}]' > imagedefinitions.worker.json

          echo creating artifacts dir...
          mkdir artifacts

          echo Building web project in artifacts directory...
          # We use docker to build the project to avoid having to install the packages needed
          # to build it on the host. The docker image already has the packages installed.
          docker run --volume $(pwd)/artifacts/build:/app/packages/web/build stringsync-dev:latest bash -c "REACT_APP_SERVER_URI=$REACT_APP_SERVER_URI yarn web build"

          echo Moving everything else into root artifacts dir...
          mv imagedefinitions.api.json artifacts
          mv imagedefinitions.worker.json artifacts
        else
          echo Build failed, skipping post_build step...
        fi

        echo Cleaning up previous builds...
        ./bin/ss down api

        echo Logging out of docker...
        docker logout

cache:
  paths:
    - /root/.yarn/**/*

artifacts:
  base-directory: artifacts
  files:
    - '**/*'
