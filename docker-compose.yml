version: '3.7'

services:
  db:
    container_name: ss_db
    image: postgres:11
    restart: always
    environment:
      POSTGRES_DB: stringsync
      POSTGRES_USER: stringsync
      POSTGRES_PASSWORD: stringsync
    networks:
      - dev-network

  server:
    container_name: ss_server
    image: ss-server:latest
    build:
      context: ./server
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3000
      CLIENT_URI: http://localhost:8080
      DB_NAME: stringsync
      DB_USERNAME: stringsync
      DB_PASSWORD: stringsync
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./common:/string-sync/common
      - ./server/src:/string-sync/server/src
    links:
      - db
    depends_on:
      - db
    ports:
      - '3000:3000'
    networks:
      - dev-network
    command: ['yarn', 'build:dev']

  scripts:
    image: ss-server:latest
    container_name: ss_scripts
    environment:
      NODE_ENV: development
      DB_NAME: stringsync
      DB_USERNAME: stringsync
      DB_PASSWORD: stringsync
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ./common:/string-sync/common
      - ./server/src:/string-sync/server/src
    links:
      - db
    networks:
      - dev-network
    command: ['yarn', 'start:scripts:dev']

  web:
    container_name: ss_web
    image: ss-web:latest
    build:
      context: ./web
      dockerfile: ./Dockerfile
    volumes:
      - ./common:/string-sync/common
      - ./web/src:/string-sync/web/src
      - ./web/public:/string-sync/web/public
    environment:
      NODE_ENV: development
      REACT_APP_SERVER_URI: 'http://localhost:3000/graphql'
    ports:
      - '8080:8080'
    links:
      - server
    networks:
      - dev-network
    command: ['yarn', 'start']

networks:
  dev-network:
    name: ss_dev_network
